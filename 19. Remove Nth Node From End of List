/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
 
 //count length, two pass
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        int length = 0;
        ListNode* cur = head;
        while(cur){
            cur = cur->next;
            length++;
        }
        
        int count = length-n;
        if(count == 0) return head->next;
        
        cur = head;
        for(int i = 1; i < count; i++)
            cur = cur->next;
        cur->next = cur->next->next;
        
        return head;
    }
};

//one pass with two pointers, add dummy head to avoid corner case
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        ListNode* dhead = new ListNode(-1);
        dhead->next = head;
        ListNode* first = dhead;
        ListNode* second = dhead;
        
        for(int i = 0; i < n; i++)
            first = first->next;
        
        while(first->next){
            first = first->next;
            second = second->next;
        }
        second->next = second->next->next;
        return dhead->next;
    }
};
